import{_ as a}from"./_plugin-vue_export-helper-c27b6911.js";import{D as t}from"./index-104000c2.js";const e={},_=t("<p data-v-e5067af7>SYN：同步序列编号。TCP/IP建立连接时使用的握手信号。</p><p data-v-e5067af7>ACK：确认字符，在数据通信中，接收站发送给发送站的一种传输类控制字符。表示发来的数据已确认接收无误</p><h2 data-v-e5067af7>HTTP三次握手和四次挥手</h2><p data-v-e5067af7>TCP并不能保证数据一定会被对方接收到，它所能提供的是数据传输的可靠或故障的可靠通知</p><h4 data-v-e5067af7>三次握手:TCP建立连接时，需要客户端和服务端总共发送三个包</h4><p data-v-e5067af7>1.客户端发送SYN标记的包，并进入SYN_SEND状态 <br data-v-e5067af7> 2.服务端返回确认包ACK应答，同时返回SYN包让客户端确认是否收到，并进入SYN_RCVD状态<br data-v-e5067af7> 3.客户端发送确认包ACK，表示收到服务器的包，进入ESTABLISHED状态</p><h4 data-v-e5067af7>四次挥手：TCP断开连接时，需要发送四个包</h4><p data-v-e5067af7>1.客户端发送FIN标识包，告诉服务器需要关闭连接，表示客户端不用发送数据了，可以接收数据。客户端进入FIN_WAIT_1状态<br data-v-e5067af7> 2.服务端发送ACK包，接收到关闭请求，但还没准备好，服务端进入CLOSE_WAIT状态.客户端接收到包后进入FIN_WAIT_2状态，等待服务器关闭。<br data-v-e5067af7> 3.服务端准备关闭连接时，发送FIN标识包，告诉客户端准备关闭了。进入LAST_ACK状态<br data-v-e5067af7> 4.客户端接收服务端的关闭请求，再发送ACK标识包，并进入TIME_WAIT状态，等待服务端可能重传的ACK包。服务端接收到ACK包后，关闭连接，进入CLOSED状态。客户端等待固定时间后，未收到ACK包，关闭连接，并进入CLOSED状态</p>",8);function d(f,p){return _}const v=a(e,[["render",d],["__scopeId","data-v-e5067af7"]]);export{v as default};
